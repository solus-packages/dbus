From aef459cd7e3a320885850585bc916805ff7ec50b Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sat, 11 Nov 2017 04:31:14 +0000
Subject: [PATCH] dbus: Teach it a new trick: Shutting up

There are times when the d-bus spam is monstrous, so let's teach it
to respect a new variable, DBUS_SILENCE_WARNINGS. If set, we'll not
hear any more about it.

This still ensures the internal safety checking takes place, it just
saves the user from a wall of spam when set.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 dbus/dbus-internals.c | 30 +++++++++++++++++++++---------
 1 file changed, 21 insertions(+), 9 deletions(-)

diff --git a/dbus/dbus-internals.c b/dbus/dbus-internals.c
index d7ef089..2e22c69 100644
--- a/dbus/dbus-internals.c
+++ b/dbus/dbus-internals.c
@@ -186,6 +186,7 @@ const char *_dbus_no_memory_message = "Not enough memory";
 static dbus_bool_t warn_initted = FALSE;
 static dbus_bool_t fatal_warnings = FALSE;
 static dbus_bool_t fatal_warnings_on_check_failed = TRUE;
+static dbus_bool_t silence_warnings = FALSE;
 
 static void
 init_warnings(void)
@@ -213,6 +214,11 @@ init_warnings(void)
             }
         }
 
+      s = _dbus_getenv ("DBUS_SILENCE_WARNINGS");
+      if (s)
+        {
+        silence_warnings = TRUE;
+        }
       warn_initted = TRUE;
     }
 }
@@ -234,10 +240,13 @@ _dbus_warn (const char *format,
 
   if (!warn_initted)
     init_warnings ();
-  
-  va_start (args, format);
-  vfprintf (stderr, format, args);
-  va_end (args);
+
+  if (!silence_warnings)
+    {
+      va_start (args, format);
+      vfprintf (stderr, format, args);
+      va_end (args);
+    }
 
   if (fatal_warnings)
     {
@@ -262,12 +271,15 @@ _dbus_warn_check_failed(const char *format,
   
   if (!warn_initted)
     init_warnings ();
-
-  fprintf (stderr, "process %lu: ", _dbus_pid_for_log ());
   
-  va_start (args, format);
-  vfprintf (stderr, format, args);
-  va_end (args);
+  if (!silence_warnings)
+    {
+      fprintf (stderr, "process %lu: ", _dbus_pid_for_log ());
+
+      va_start (args, format);
+      vfprintf (stderr, format, args);
+      va_end (args);
+    }
 
   if (fatal_warnings_on_check_failed)
     {
-- 
2.15.0

