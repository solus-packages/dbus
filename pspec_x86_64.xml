<PISI>
    <Source>
        <Name>dbus</Name>
        <Packager>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Packager>
        <License>GPL-2.0</License>
        <License>LGPL-2.1</License>
        <PartOf>system.base</PartOf>
        <Summary xml:lang="en">System Message Daemon</Summary>
        <Description xml:lang="en">D-Bus is a message bus system, a simple way for applications to talk to one
another. D-Bus supplies both a system daemon (for events such as
&quot;new hardware device added&quot; or &quot;printer queue changed&quot;) and a per-user
login-session daemon (for general IPC needs among user applications).
Also, the message bus is built on top of a general one-to-one message
passing framework, which can be used by any two applications to communicate
directly (without going through the message bus daemon).
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://solus-project.com/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>dbus</Name>
        <Summary xml:lang="en">System Message Daemon</Summary>
        <Description xml:lang="en">D-Bus is a message bus system, a simple way for applications to talk to one
another. D-Bus supplies both a system daemon (for events such as
&quot;new hardware device added&quot; or &quot;printer queue changed&quot;) and a per-user
login-session daemon (for general IPC needs among user applications).
Also, the message bus is built on top of a general one-to-one message
passing framework, which can be used by any two applications to communicate
directly (without going through the message bus daemon).
</Description>
        <PartOf>system.base</PartOf>
        <Files>
            <Path fileType="config">/etc/dbus-1/session.conf</Path>
            <Path fileType="config">/etc/dbus-1/system.conf</Path>
            <Path fileType="executable">/usr/bin</Path>
            <Path fileType="library">/usr/lib/systemd/system/dbus.service</Path>
            <Path fileType="library">/usr/lib/systemd/system/dbus.socket</Path>
            <Path fileType="library">/usr/lib/systemd/system/dbus.target.wants/dbus.socket</Path>
            <Path fileType="library">/usr/lib/systemd/system/multi-user.target.wants/dbus.service</Path>
            <Path fileType="library">/usr/lib/systemd/system/sockets.target.wants/dbus.socket</Path>
            <Path fileType="library">/usr/lib/systemd/user/dbus.service</Path>
            <Path fileType="library">/usr/lib/systemd/user/dbus.socket</Path>
            <Path fileType="library">/usr/lib/systemd/user/sockets.target.wants/dbus.socket</Path>
            <Path fileType="library">/usr/lib64/dbus-1.0/dbus-daemon-launch-helper</Path>
            <Path fileType="library">/usr/lib64/lib*.so.*</Path>
            <Path fileType="library">/usr/lib64/sysusers.d/dbus.conf</Path>
            <Path fileType="library">/usr/lib64/tmpfiles.d/dbus.conf</Path>
            <Path fileType="data">/usr/share/dbus-1/services</Path>
            <Path fileType="data">/usr/share/dbus-1/session.conf</Path>
            <Path fileType="data">/usr/share/dbus-1/session.d</Path>
            <Path fileType="data">/usr/share/dbus-1/system-services</Path>
            <Path fileType="data">/usr/share/dbus-1/system.conf</Path>
            <Path fileType="data">/usr/share/dbus-1/system.d</Path>
            <Path fileType="doc">/usr/share/doc</Path>
            <Path fileType="man">/usr/share/man</Path>
        </Files>
    </Package>
    <Package>
        <Name>dbus-32bit</Name>
        <Summary xml:lang="en">32-bit libraries for dbus</Summary>
        <Description xml:lang="en">D-Bus is a message bus system, a simple way for applications to talk to one
another. D-Bus supplies both a system daemon (for events such as
&quot;new hardware device added&quot; or &quot;printer queue changed&quot;) and a per-user
login-session daemon (for general IPC needs among user applications).
Also, the message bus is built on top of a general one-to-one message
passing framework, which can be used by any two applications to communicate
directly (without going through the message bus daemon).
</Description>
        <PartOf>emul32</PartOf>
        <RuntimeDependencies>
            <Dependency release="22">dbus</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/lib*.so.*</Path>
        </Files>
    </Package>
    <Package>
        <Name>dbus-32bit-devel</Name>
        <Summary xml:lang="en">Development files for 32-bit dbus</Summary>
        <Description xml:lang="en">D-Bus is a message bus system, a simple way for applications to talk to one
another. D-Bus supplies both a system daemon (for events such as
&quot;new hardware device added&quot; or &quot;printer queue changed&quot;) and a per-user
login-session daemon (for general IPC needs among user applications).
Also, the message bus is built on top of a general one-to-one message
passing framework, which can be used by any two applications to communicate
directly (without going through the message bus daemon).
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="22">dbus-32bit</Dependency>
            <Dependency release="22">dbus-devel</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/dbus-1.0/include/</Path>
            <Path fileType="library">/usr/lib32/lib*.so</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/*.pc</Path>
        </Files>
    </Package>
    <Package>
        <Name>dbus-devel</Name>
        <Summary xml:lang="en">Development files for dbus</Summary>
        <Description xml:lang="en">D-Bus is a message bus system, a simple way for applications to talk to one
another. D-Bus supplies both a system daemon (for events such as
&quot;new hardware device added&quot; or &quot;printer queue changed&quot;) and a per-user
login-session daemon (for general IPC needs among user applications).
Also, the message bus is built on top of a general one-to-one message
passing framework, which can be used by any two applications to communicate
directly (without going through the message bus daemon).
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="22">dbus</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="header">/usr/include/</Path>
            <Path fileType="library">/usr/lib64/dbus-1.0/include/</Path>
            <Path fileType="library">/usr/lib64/lib*.so</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/*.pc</Path>
        </Files>
    </Package>
    <Package>
        <Name>dbus-launch</Name>
        <Summary xml:lang="en">X11 dbus-launch helper</Summary>
        <Description xml:lang="en">D-Bus is a message bus system, a simple way for applications to talk to one
another. D-Bus supplies both a system daemon (for events such as
&quot;new hardware device added&quot; or &quot;printer queue changed&quot;) and a per-user
login-session daemon (for general IPC needs among user applications).
Also, the message bus is built on top of a general one-to-one message
passing framework, which can be used by any two applications to communicate
directly (without going through the message bus daemon).
</Description>
        <PartOf>desktop.core</PartOf>
        <RuntimeDependencies>
            <Dependency release="22">dbus</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="executable">/usr/bin/dbus-launch</Path>
            <Path fileType="man">/usr/share/man/man1/dbus-launch.1</Path>
        </Files>
    </Package>
    <History>
        <Update release="22">
            <Date>2017-11-11</Date>
            <Version>1.10.24</Version>
            <Comment>Packaging update</Comment>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Update>
    </History>
</PISI>